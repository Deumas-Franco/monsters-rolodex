{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-field/search-field.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","monsters","map","SearchField","type","placeholder","placeholderText","onChange","handleChange","App","state","searchFieldText","handleSearchFieldChange","e","setState","target","value","fetch","then","res","json","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TASeA,EAPF,SAACC,GAAD,OACT,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,6BAAKL,EAAMI,QAAQE,WCMZC,G,MARE,SAACP,GAAD,OACb,qBAAKC,UAAU,YAAf,SAEQD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCD9CK,G,MAJK,SAACV,GAAD,OAChB,uBAAOW,KAAK,SAASV,UAAU,SAASW,YAAaZ,EAAMa,gBAAiBC,SAAUd,EAAMe,iBC8BjFC,G,kNA1BbC,MAAQ,CACNT,SAAU,GACVU,gBAAiB,I,EAOnBC,wBAA0B,SAACC,GACzB,EAAKC,SAAS,CAACH,gBAAiBE,EAAEE,OAAOC,S,uDAN3C,WAAqB,IAAD,OAClBC,MAAM,8CACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAjB,GAAQ,OAAI,EAAKa,SAAS,CAACb,kB,oBAMvC,WACE,MAAoCoB,KAAKX,MAAlCT,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,gBACXW,EAAmBrB,EAASsB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASd,EAAgBa,kBACvG,OACC,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAaY,gBAAgB,kBAAkBE,aAAca,KAAKT,0BAClE,cAAC,EAAD,CAAUX,SAAUqB,W,GArBVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ab4d29b1.chunk.js","sourcesContent":["import './card.css';\n\nconst Card = (props) => (\n    <div className=\"card-container\">\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`}/>\n        <h2>{props.monster.name}</h2>\n    </div>\n);\n\nexport default Card;","import Card from '../card/card';\nimport './card-list.css';\n\nconst CardList = (props) => (\n    <div className=\"card-list\">\n        {\n            props.monsters.map(monster => <Card key={monster.id} monster={monster}/> )     \n        }\n    </div>\n);\n\nexport default CardList;\n\n","import './search-field.css';\nconst SearchField = (props) => (\n    <input type='search' className='search' placeholder={props.placeholderText} onChange={props.handleChange}/>\n);\n\nexport default SearchField;","import React, { Component } from 'react';\nimport CardList from './components/card-list/card-list';\nimport SearchField from './components/search-field/search-field';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    monsters: [],\n    searchFieldText: ''\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(res => res.json())\n        .then(monsters => this.setState({monsters}))\n  }\n  handleSearchFieldChange = (e) => {\n    this.setState({searchFieldText: e.target.value})\n  }\n\n  render() {\n    const {monsters, searchFieldText} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchFieldText.toLowerCase()))\n     return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchField placeholderText=\"Search Monsters\" handleChange={this.handleSearchFieldChange}/>\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}